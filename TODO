API design
----------

- rename Canvas.add_title() to Canvas.title()?
- swap the row/column arguments of Canvas.subplot()?
- Rationalise use of the margin/border/padding scheme.  Should these
  be in style?
- Maybe split Canvas into two classes, one which only has the
  high-level methods like plot and histogram, and one which adds all
  the methods which require the coordinate system already to be set
  up.

bug fixes
---------

- Title positions look odd when axes are used.  Can this be fixed somehow?
  Maybe add a `title` keyword argument to `Canvas.plot()` or similar?
- if the right/top-most tick label does not fit within the padding,
  move the label inwards a bit.
- autogenerate doc-strings for configuration parameters
- strictly obey explicitly given x_lim and y_lim values

enhancements
------------

- implement logarithmic axes
- add more unit tests for `axis._try_pairs`
- add support for custom tick label formats, e.g. for dates
- add support for axis labels
- implement minor axis ticks
- add support for raster images
- implement units 'em' and 'en'
- Relative font sizes can be easily implemented using the
  parent_height argument of param.get().  But what are the font sizes
  relative to?
- Use a complicated clip region to preserve the inward halfs of the
  axis ticks?  Or provide a function to redraw the tick labels?  Or
  draw tick labels in the destructor?
- Should histograms have padding-bottom = 0?
- Should the box centers or the box boundaries be labelled in histograms?
- Choose a nicer style for the sphinx HTML output.
